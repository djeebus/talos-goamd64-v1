name: build GOAMD64=v1 version of talos

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: Talos version

jobs:
  build-release:
    runs-on: ubuntu-22.04

    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        build:
          - make installer GOAMD64=v1 REGISTRY=ghcr.io USERNAME=djeebus/talos PUSH=true
          - make imager GOAMD64=v1 REGISTRY=ghcr.io USERNAME=djeebus/talos PUSH=true
          - make talosctl-image GOAMD64=v1 REGISTRY=ghcr.io USERNAME=djeebus/talos PUSH=true
          - make talos GOAMD64=v1 REGISTRY=ghcr.io USERNAME=djeebus/talos PUSH=true
          - make initramfs kernel talosctl GOAMD64=v1
          - make kernel talosctl GOAMD64=v1
          - make talosctl GOAMD64=v1

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - shell: bash
        run: |
          set -e
          
          # exit early if the version does not exist
          if ! curl https://api.github.com/repos/siderolabs/talos/releases/tags/v${{ inputs.version }} \
            --output /dev/null \
            --silent \
            --fail; then
            echo "${{ inputs.version }} is not a valid talos release"
            exit 1
          fi

          echo "logging into ghcr.io ... "
          echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io --username ${{ github.actor }} --password-stdin  
          
          echo "cloning git repo ... "
          git clone --branch v${{ inputs.version }} --depth 1 https://github.com/siderolabs/talos.git ./talos.git
          cd ./talos.git
          
          echo "building ... "
          ${{ matrix.build }}

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./talos.git/_out/*"
          body: "# v${{ inputs.version }}"
          commit: "main"
          replacesArtifacts: true
          tag: "${{ inputs.version }}"
